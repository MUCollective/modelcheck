[{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://guoziyang27.github.io/modelcheck/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://guoziyang27.github.io/modelcheck/articles/modelcheck.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using modelcheck for posterior predictive check","text":"vignette introduces modelcheck package, facilitates model check visualizations (.e., comparing observed data model predictions) Bayesian models R. vignette follows basic workflow model check show modelcheck can fulfill requirements minimal changes code. detail description geoms comparative layouts, see vignette(\"uncert-rep\") vignette(\"comp-layout\").","code":""},{"path":"https://guoziyang27.github.io/modelcheck/articles/modelcheck.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Using modelcheck for posterior predictive check","text":"following libraries required run vignette: options help Stan run faster:","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(purrr) library(modelcheck) library(ggplot2) library(ggdist) library(cowplot) library(rstan) #> Loading required package: StanHeaders #> rstan (Version 2.21.8, GitRev: 2e1f913d3ca3) #> For execution on a local, multicore CPU with excess RAM we recommend calling #> options(mc.cores = parallel::detectCores()). #> To avoid recompilation of unchanged Stan programs, we recommend calling #> rstan_options(auto_write = TRUE) library(brms) #> Loading required package: Rcpp #> Loading 'brms' package (version 2.19.0). Useful instructions #> can be found by typing help('brms'). A more detailed introduction #> to the package is available through vignette('brms_overview'). #>  #> Attaching package: 'brms' #> The following object is masked from 'package:rstan': #>  #>     loo #> The following objects are masked from 'package:ggdist': #>  #>     dstudent_t, pstudent_t, qstudent_t, rstudent_t #> The following object is masked from 'package:stats': #>  #>     ar library(gganimate)  theme_set(theme_tidybayes() + panel_border()) rstan_options(auto_write = TRUE) options(mc.cores = parallel::detectCores())"},{"path":"https://guoziyang27.github.io/modelcheck/articles/modelcheck.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Using modelcheck for posterior predictive check","text":"Let’s fit simple model datasets::mtcars default priors four predictors: results look like :","code":"get_prior(bf(mpg ~ disp + carb + vs + am), data = mtcars) #>                    prior     class coef group resp dpar nlpar lb ub #>                   (flat)         b                                  #>                   (flat)         b   am                             #>                   (flat)         b carb                             #>                   (flat)         b disp                             #>                   (flat)         b   vs                             #>  student_t(3, 19.2, 5.4) Intercept                                  #>     student_t(3, 0, 5.4)     sigma                             0    #>        source #>       default #>  (vectorized) #>  (vectorized) #>  (vectorized) #>  (vectorized) #>       default #>       default model = brm(   bf(mpg ~ disp + carb + vs + am),   init = \"0\",   data = mtcars,   iter = 6000,   sample_prior = TRUE,   file = \"models/get-started_model.rds\" # cache model (can be removed) ) model #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: mpg ~ disp + carb + vs + am  #>    Data: mtcars (Number of observations: 32)  #>   Draws: 4 chains, each with iter = 6000; warmup = 3000; thin = 1; #>          total post-warmup draws = 12000 #>  #> Population-Level Effects:  #>           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept    26.36      2.98    20.52    32.22 1.00     6901     7124 #> disp         -0.02      0.01    -0.04    -0.01 1.00     7061     8104 #> carb         -1.26      0.39    -2.05    -0.50 1.00     8987     7811 #> vs            1.21      1.67    -2.13     4.45 1.00     7621     8050 #> am            4.13      1.43     1.31     6.95 1.00     7844     8398 #>  #> Family Specific Parameters:  #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     2.76      0.40     2.12     3.66 1.00     8124     7810 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://guoziyang27.github.io/modelcheck/articles/modelcheck.html","id":"generate-graphical-posterior-predictive-checks","dir":"Articles","previous_headings":"","what":"Generate graphical posterior predictive checks","title":"Using modelcheck for posterior predictive check","text":"Now model, model check begins: usually starts density plot posterior predictive distribution data observed distribution. mcplot() generates density plot model check default options defined.  modelcheck puts response variable y axis default. can flip plot generate canonical posterior predictive check density plot. modelcheck enables mc_gglayer add ggplot2 layer model check.  mcplot() uses lot defaults make model check visualization users don’t explicitly define everything. lines roughly equivalent following:  mc_distribution() defines modelcheck draw posterior distribution, \"predictive\" says draw posterior predictive distribution newdata = \"obs\" says use observation dataset generate. mc_model_geom_line() mc_obs_geom_line() define geom model predictions data observations choose suitable geom users based data types. mc_comp_layout() defines comparative layout model check, .e. compare model predictions data observations. option \"sup\" superposition, overlaps predictions observations one plot. mc_gglayer() adds ggplot2::layer() model check visualization. discuss details functions later sections.","code":"model %>%    mcplot() model %>%    mcplot() +   mc_gglayer(coord_flip()) model %>%    mcplot() +   mc_distribution(\"predictive\") +   mc_model_line(stat = \"density\", alpha = .1) +   mc_obs_line(stat = \"density\") +   mc_layout_superposition() +   mc_gglayer(coord_flip())"},{"path":"https://guoziyang27.github.io/modelcheck/articles/modelcheck.html","id":"add-conditional-predictions-for-posterior-predictive-checks","dir":"Articles","previous_headings":"","what":"Add conditional predictions for posterior predictive checks","title":"Using modelcheck for posterior predictive check","text":"Model check single variable check also involves conditional variables checks response variable’s marginal effects . example, want check impact disp mpg model. using modelcheck, ’s pretty easy just adding one line code:  can easily apply uncertainty representations model predictions modelcheck. example, lineribbon point+interval shown . Lineribbon:  Point + interval  can also show different draws animation (HOPs.).  can even use HOPs uncertainty representations together.","code":"model %>%    mcplot() +   mc_condition_on(x = vars(disp)) model %>%    mcplot() +   mc_model_lineribbon() +   mc_condition_on(x = vars(disp)) model %>%    mcplot() +   mc_model_pointinterval() +   mc_condition_on(x = vars(disp)) model %>%    mcplot() +   mc_model_point(draw = \"hops\") +   mc_condition_on(x = vars(disp)) model %>%    mcplot() +   mc_model_pointinterval(draw = \"hops\") +   mc_condition_on(x = vars(disp))"},{"path":"https://guoziyang27.github.io/modelcheck/articles/modelcheck.html","id":"changing-comparative-layouts","dir":"Articles","previous_headings":"","what":"Changing comparative layouts","title":"Using modelcheck for posterior predictive check","text":"Since model check checking model’s performance comparing observed data, modelcheck package also enables users change comparative layouts model prediction data observations function mc_comp_layout(). modelcheck four predefined comparative layouts: juxtaposition, superposition, nested juxtaposition, explicit-encoding. Juxtaposition puts model predictions data observations side side. Juxtaposition especially useful model predictions data observations overlapped superposition can distinguished well.  Superposition default comparative layout modelcheck. puts model predictions top data observations shows one plots.  checking model conditional discrete variable, might want comparative layout neither superposition, since make data points overlapped, juxtaposition, since visual distance model predictions data observations large check . time, nested juxtaposition good choice, puts model predictions data observations one plot make overlapped.  Explicit-encoding focuses revealing relationship model predictions data observations explicitly encoding calculating visualizations. common examples residual plot, Q-Q plot, wormplots. modelcheck supports explicitly-encoding enabling users pass operation (exp_op) want explicitly-encoding comparison. modelcheck predefines several common explicitly-encodings (e.g. residual plot Q-Q plot) users can still pass customized operation function. Residual plot uncertainty representation lineribbon:  Q-Q plot:  can also cutomize operation function make explicitly-encoding explicit comparison want. customized function take data frame including two columns predictions observations input return data frame columns named y_axis x_axis (optional). Standardized residual plot (using customized operation function):","code":"model %>%   mcplot() +    mc_model_eye() +   mc_obs_eye() +   mc_condition_on(x = vars(carb)) +   mc_layout_juxtaposition() model %>%   mcplot() +    mc_model_eye() +   mc_obs_eye() +   mc_condition_on(x = vars(carb)) +   mc_layout_superposition() model %>%   mcplot() +    mc_model_eye() +   mc_obs_eye() +   mc_condition_on(x = vars(carb)) +   mc_layout_nested() model %>%   mcplot() +    mc_model_lineribbon() +   mc_layout_encoding(transform = \"residual\") +   mc_condition_on(x = vars(disp)) +   mc_gglayer(geom_hline(yintercept = 0)) model %>%   mcplot() +    mc_layout_encoding(transform = \"qq\") +   mc_gglayer(geom_abline()) std_res_func = function(data) {   data %>%     mutate(y_axis = prediction - observation) %>%     mutate(y_axis = y_axis / sd(y_axis)) }  model %>%   mcplot() +    mc_model_lineribbon() +   mc_layout_encoding(transform = std_res_func) +   mc_condition_on(x = vars(disp)) +   mc_gglayer(geom_hline(yintercept = 0))"},{"path":"https://guoziyang27.github.io/modelcheck/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ziyang Guo. Author, maintainer. Jessica Hullman. Author. Matthew Kay. Author. Alex Kale. Author.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guo Z, Hullman J, Kay M, Kale (2023). modelcheck: Check model data observations. R package version 0.0.0.0, https://guoziyang27.github.io/modelcheck/.","code":"@Manual{,   title = {modelcheck: Check your model with data observations},   author = {Ziyang Guo and Jessica Hullman and Matthew Kay and Alex Kale},   year = {2023},   note = {R package version 0.0.0.0},   url = {https://guoziyang27.github.io/modelcheck/}, }"},{"path":"https://guoziyang27.github.io/modelcheck/index.html","id":"modelcheck-an-r-package-for-generating-model-check-visualization","dir":"","previous_headings":"","what":"Check your model with data observations","title":"Check your model with data observations","text":"modelcheck visualization grammar designed make easy generate informative visualizations model checking. modelcheck grammar assumes basic workflow creating model checks. First, model predictions model features need extracted distribution data model object, .e. data tidying. user must specify uncertainty representation describe selected distribution(s). must also specify presentation observed data. user can choose among multiple comparative layouts structure comparison observed data model predictions.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Check your model with data observations","text":"can install development version modelcheck GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Guoziyang27/modelcheck\")"},{"path":[]},{"path":"https://guoziyang27.github.io/modelcheck/index.html","id":"background-model","dir":"","previous_headings":"Usage","what":"Background: model","title":"Check your model with data observations","text":"use simple model show usage modelcheck. results…","code":"library(brms) #> Loading required package: Rcpp #> Loading 'brms' package (version 2.19.0). Useful instructions #> can be found by typing help('brms'). A more detailed introduction #> to the package is available through vignette('brms_overview'). #>  #> Attaching package: 'brms' #> The following object is masked from 'package:stats': #>  #>     ar model = brm(   bf(mpg ~ disp + vs + am),   init = \"0\",   data = mtcars,   iter = 6000,      file = \"models/example_model.rds\" # cache model (can be removed)   ) model #>  Family: gaussian  #>   Links: mu = identity; sigma = identity  #> Formula: mpg ~ disp + vs + am  #>    Data: mtcars (Number of observations: 32)  #>   Draws: 4 chains, each with iter = 6000; warmup = 3000; thin = 1; #>          total post-warmup draws = 12000 #>  #> Population-Level Effects:  #>           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept    23.40      3.31    16.83    29.98 1.00     4998     6130 #> disp         -0.03      0.01    -0.04    -0.01 1.00     5339     6336 #> vs            3.01      1.85    -0.69     6.60 1.00     6048     7027 #> am            3.00      1.64    -0.23     6.22 1.00     6766     7410 #>  #> Family Specific Parameters:  #>       Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sigma     3.25      0.46     2.51     4.27 1.00     8481     7788 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://guoziyang27.github.io/modelcheck/index.html","id":"examples","dir":"","previous_headings":"Usage","what":"Examples","title":"Check your model with data observations","text":"can create default model check posterior predictive check using mcplot().  control way draw distribution model, can add mc_distribution() mcplot(). , drawing posterior distribution mu Gaussian model define earlier.  add marginal effects check, can use mc_condition_on() add x axis, row grids, column grids.  Now may find distribution mpg margining disp little hard see. can use mc_model_lineribbon() use line + ribbon plot show uncertainty model.  mcplot() puts model predictions data observations superposed default. can change using mc_layout_*(). change comparative layout juxtaposition.","code":"library(modelcheck) library(ggplot2) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union model %>%   mcplot() model %>%   mcplot() +   mc_distribution(\"mu\") model %>%   mcplot() +   mc_distribution(\"mu\") +   mc_condition_on(x = vars(disp)) model %>%   mcplot() +   mc_distribution(\"mu\", ndraws = 500) +   mc_condition_on(x = vars(disp)) +   mc_model_lineribbon() model %>%   mcplot() +   mc_distribution(\"mu\", ndraws = 500) +   mc_condition_on(x = vars(disp)) +   mc_model_lineribbon() +   mc_layout_juxtaposition() #> Warning: Removed 19 rows containing missing values (`stat_slabinterval()`)."},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_color_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Colors in model check visualization — mc_color_palettes","title":"Colors in model check visualization — mc_color_palettes","text":"mc_color_palettes return pair default color data observations model prediction.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_color_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colors in model check visualization — mc_color_palettes","text":"","code":"mc_color_palettes()  mc_set_model_color(model_color = NULL)  mc_set_obs_color(obs_color = NULL)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_color_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colors in model check visualization — mc_color_palettes","text":"model_color, obs_color color used model predictions data observations. default, mcplot() uses mc_color_palettes() define colors model predictions data observations.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_color_palettes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Colors in model check visualization — mc_color_palettes","text":"mc_set_model_color sets global color geoms represent model predictions. change color related aesthetics (e.g. color fill). mc_set_obs_color thing mc_set_model_color except setting geoms represent data observations.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_condition_on.html","id":null,"dir":"Reference","previous_headings":"","what":"Add marginal check to model check — mc_condition_on","title":"Add marginal check to model check — mc_condition_on","text":"Add marginal check model check","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_condition_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add marginal check to model check — mc_condition_on","text":"","code":"mc_condition_on(x = NULL, row = NULL, col = NULL)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_condition_on.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add marginal check to model check — mc_condition_on","text":"x variable quoted ggplot2::vars() defining conditional variable x axis. row, col set variables quoted ggplot2::vars() defining faceting groups rows columns","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Define how to draw from posterior distribution — mc_distribution","title":"Define how to draw from posterior distribution — mc_distribution","text":"modelcheck uses R package tidybayes draw posterior distributions. posterior predictive distributions, modelcheck uses tidybayes::predicted_draws(); posterior distribution push-forward transformation, modelcheck uses tidybayes::linpred_draws().","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define how to draw from posterior distribution — mc_distribution","text":"","code":"mc_distribution(   distribution = \"predictive\",   newdata = NULL,   draw_function = NULL,   response_var = NULL,   ndraws = 500,   ... )"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define how to draw from posterior distribution — mc_distribution","text":"distribution distribution draw . options include \"predictive\" push-forward transformations (e.g. mu, sigma, phi). example, model normal family distribution = \"predictive\", draws posterior predictive distribution; distribution = \"mu\", draws distribution linear/link-level predictor (.e. push-forward transformations). newdata Data frame generate predictions , NULL reuse data frame used fit model, .e. replicated predictive distribution. draw_function function used draw model's posterior distributions. Default NULL. draw_function NULL, modelcheck use tidybayes::predicted_draws() distribution = \"predictive\" use tidybayes::linpred_draws() distributions linear/link-level predictors. draw_function NULL, function takes model, newdata, ndraws inputs output data frame sampled model newdata least prediction column (draws model's distribution), .row column (factor grouping rows input newdata), .draw column (unique index corresponding draw distribution). response_var string response variable model. Default NULL. NULL, modelcheck find response variable model$formula. ndraws number draws return, NULL return draws. ... Augments passed draw_function. draw_function NULL, ... passed tidybayes::predicted_draws() tidybayes::linpred_draws()","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define how to draw from posterior distribution — mc_distribution","text":"","code":"library(brms) #> Loading required package: Rcpp #> Loading 'brms' package (version 2.19.0). Useful instructions #> can be found by typing help('brms'). A more detailed introduction #> to the package is available through vignette('brms_overview'). #>  #> Attaching package: ‘brms’ #> The following object is masked from ‘package:stats’: #>  #>     ar library(modelr) #> Error in library(modelr): there is no package called ‘modelr’ model = brm(   bf(mpg ~ disp),   init = \"0\",   data = mtcars,   iter = 6000,   file = \"models/example_model.rds\" # cache model (can be removed) ) #> Error: The directory 'models' does not exist. Please choose an existing directory where the model can be saved after fitting. mcplot(model) +   mc_distribution() #> Error in mc_setting %>% e2() %>% e1(): could not find function \"%>%\"  mcplot(model) +   mc_distribution(\"mu\") #> Error in mc_setting %>% e2() %>% e1(): could not find function \"%>%\"  mcplot(model) +   mc_distribution(\"mu\", data_grid(model$data, disp, carb, vs, am, mpg)) #> Error in mc_setting %>% e2() %>% e1(): could not find function \"%>%\"  library(tidybayes) #>  #> Attaching package: ‘tidybayes’ #> The following objects are masked from ‘package:brms’: #>  #>     dstudent_t, pstudent_t, qstudent_t, rstudent_t draw_function = function(model, newdata, ...) {   epred_draws(model, newdata, dpar = \"mu\", ...) }  mcplot(model) +   mc_distribution(draw_function = draw_function) #> Error in mc_setting %>% e2() %>% e1(): could not find function \"%>%\""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_gglayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Pass ggplot2::layer() to model check visualization — mc_gglayer","title":"Pass ggplot2::layer() to model check visualization — mc_gglayer","text":"Pass ggplot2::layer() model check visualization","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_gglayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pass ggplot2::layer() to model check visualization — mc_gglayer","text":"","code":"mc_gglayer(layers)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_gglayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pass ggplot2::layer() to model check visualization — mc_gglayer","text":"layers list ggplot2::layer().","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_layout_juxtaposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Define comparative layout in model check visualization — mc_layout_juxtaposition","title":"Define comparative layout in model check visualization — mc_layout_juxtaposition","text":"comparative layout use? using mc_layout_juxtaposition(), mcplot() use juxtaposition layout puts data observations model predictions side side two seperated plots; using mc_layout_superposition(), mcplot() overlays data observations model predictions one plot; using mc_layout_encoding, mcplot() show comparison explicit-encoding; using mc_layout_nested, mcplot() show comparison side side one plot.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_layout_juxtaposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define comparative layout in model check visualization — mc_layout_juxtaposition","text":"","code":"mc_layout_juxtaposition(...)  mc_layout_superposition()  mc_layout_nested(justification = 0.2)  mc_layout_encoding(transform)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_layout_juxtaposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define comparative layout in model check visualization — mc_layout_juxtaposition","text":"... arguments passed cowplot::plot_grid(), using juxtaposition. justification number ro set deviate center using nested juxtaposition. justification positive number, model predictions right data observations left; justification negative number, positions reversed. transform operation needs explicit-encoding? transform : \"residual\", mcplot() show comparison data observations model predictions residual plot. \"qq\", mcplot() show comparison Q-Q plot. \"worm\", mcplot() show comparison detrended Q-Q plot (worm plot). function, mcplot() transform data function. input function data frame generated newdata data frame passed mc_distribution(), includes .row column (factor grouping rows input newdata), .chain column (chain draw came , NA model provide chain information), .iteration column (iteration draw came , NA model provide iteration information), .draw column (unique index corresponding draw distribution). output function includes column named y_axis specifies data shown y axis least optional column named x_axis specifies data shown x axis. output includes x_axis, mcplot() ignore conditional variable x defined mc_condition_on(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Recommend a geom — mc_obs_auto","title":"Recommend a geom — mc_obs_auto","text":"Recommend geom","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recommend a geom — mc_obs_auto","text":"","code":"mc_obs_auto(...)  mc_model_auto(..., n_sample = NA, draw = NULL)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recommend a geom — mc_obs_auto","text":"... Augments passed geom functions (e.g. ggplot2::geom_point, ggplot2::geom_line, ggplot2::geom_tile). n_sample number sample draws show. Default NA. n_sample NA, mc_model_auto() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one geom; draw \"group\", draw shown individual geom; draw \"hops\", mc_model_auto() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_ccdf.html","id":null,"dir":"Reference","previous_headings":"","what":"CCDF bar plot for model predictions — mc_obs_ccdf","title":"CCDF bar plot for model predictions — mc_obs_ccdf","text":"CCDF bar plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_ccdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CCDF bar plot for model predictions — mc_obs_ccdf","text":"","code":"mc_obs_ccdf(...)  mc_model_ccdf(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_ccdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CCDF bar plot for model predictions — mc_obs_ccdf","text":"... Augments passed ggdist::stat_ccdfinterval. n_sample number sample draws show CCDF bar plot. Default NA. n_sample NA, mc_model_ccdf() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one CCDF bar plot; draw \"group\", draw shown individual CCDF bar plot; draw \"hops\", mc_model_ccdf() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"CDF bar plot for model predictions — mc_obs_cdf","title":"CDF bar plot for model predictions — mc_obs_cdf","text":"CDF bar plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CDF bar plot for model predictions — mc_obs_cdf","text":"","code":"mc_obs_cdf(...)  mc_model_cdf(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CDF bar plot for model predictions — mc_obs_cdf","text":"... Augments passed ggdist::stat_cdfinterval. n_sample number sample draws show CDF bar plot. Default NA. n_sample NA, mc_model_cdf() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one CDF bar plot; draw \"group\", draw shown individual CDF bar plot; draw \"hops\", mc_model_cdf() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Customized geom — mc_obs_custom","title":"Customized geom — mc_obs_custom","text":"Customized geom","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customized geom — mc_obs_custom","text":"","code":"mc_obs_custom(plot, ...)  mc_model_custom(geom_plot, ..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customized geom — mc_obs_custom","text":"... Augments passed geom_plot. geom_plot geom plot use. \"geom_plot\" geom function like geoms ggplots able data mapping augments. See examples details. n_sample number sample draws show. Default NA. n_sample NA, mc_model_custom() use draws posterior distribution. draw show draws? Default \"hops\". draw \"collapse\", draws collapsed together shown one geom; \"draw\" \"group\", one draw shown one geom; draw \"hops\", mc_model_custom() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot for model predictions — mc_obs_dots","title":"Dot plot for model predictions — mc_obs_dots","text":"Dot plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot for model predictions — mc_obs_dots","text":"","code":"mc_obs_dots(...)  mc_model_dots(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot for model predictions — mc_obs_dots","text":"... Augments passed ggdist::stat_dots. n_sample number sample draws show Dot plot. Default NA. n_sample NA, mc_model_dots() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one Dot plot; draw \"group\", draw shown individual Dot plot; draw \"hops\", mc_model_dots() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_dotsinterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Dots interval plot for model predictions — mc_obs_dotsinterval","title":"Dots interval plot for model predictions — mc_obs_dotsinterval","text":"Dots interval plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_dotsinterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dots interval plot for model predictions — mc_obs_dotsinterval","text":"","code":"mc_obs_dotsinterval(...)  mc_model_dotsinterval(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_dotsinterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dots interval plot for model predictions — mc_obs_dotsinterval","text":"... Augments passed ggdist::stat_dotsinterval. n_sample number sample draws show Dots interval plot. Default NA. n_sample NA, mc_model_dotsinterval() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one Dots interval plot; draw \"group\", draw shown individual Dots interval plot; draw \"hops\", mc_model_dotsinterval() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_eye.html","id":null,"dir":"Reference","previous_headings":"","what":"Eye (violin + interval) plot for model predictions — mc_obs_eye","title":"Eye (violin + interval) plot for model predictions — mc_obs_eye","text":"Eye (violin + interval) plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_eye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eye (violin + interval) plot for model predictions — mc_obs_eye","text":"","code":"mc_obs_eye(...)  mc_model_eye(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_eye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Eye (violin + interval) plot for model predictions — mc_obs_eye","text":"... Augments passed ggdist::stat_eye. n_sample number sample draws show eye plot. Default NA. n_sample NA, mc_model_eye() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one eye plot; draw \"group\", draw shown individual eye plot; draw \"hops\", mc_model_eye() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_gradientinterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient + interval plot for model predictions — mc_model_gradientinterval","title":"Gradient + interval plot for model predictions — mc_model_gradientinterval","text":"Gradient + interval plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_gradientinterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient + interval plot for model predictions — mc_model_gradientinterval","text":"","code":"mc_model_gradientinterval(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_gradientinterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient + interval plot for model predictions — mc_model_gradientinterval","text":"... Augments passed ggdist::stat_gradientinterval. n_sample number sample draws show gradient + interval plot. Default NA. n_sample NA, mc_model_gradientinterval() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one gradient + interval plot; draw \"group\", draw shown individual gradient + interval plot; draw \"hops\", mc_model_gradientinterval() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_halfeye.html","id":null,"dir":"Reference","previous_headings":"","what":"Half-eye (density + interval) plot for model predictions — mc_obs_halfeye","title":"Half-eye (density + interval) plot for model predictions — mc_obs_halfeye","text":"Half-eye (density + interval) plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_halfeye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Half-eye (density + interval) plot for model predictions — mc_obs_halfeye","text":"","code":"mc_obs_halfeye(...)  mc_model_halfeye(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_halfeye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Half-eye (density + interval) plot for model predictions — mc_obs_halfeye","text":"... Augments passed ggdist::stat_halfeye. n_sample number sample draws show half eye plot. Default NA. n_sample NA, mc_model_halfeye() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one half eye plot; draw \"group\", draw shown individual half eye plot; draw \"hops\", mc_model_halfeye() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_histinterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram + interval plot for model predictions — mc_obs_histinterval","title":"Histogram + interval plot for model predictions — mc_obs_histinterval","text":"Histogram + interval plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_histinterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram + interval plot for model predictions — mc_obs_histinterval","text":"","code":"mc_obs_histinterval(...)  mc_model_histinterval(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_histinterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram + interval plot for model predictions — mc_obs_histinterval","text":"... Augments passed ggdist::stat_histinterval. n_sample number sample draws show histogram + interval plot. Default NA. n_sample NA, mc_model_histinterval() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one histogram + interval plot; draw \"group\", draw shown individual histogram + interval plot; draw \"hops\", mc_model_histinterval() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Interval plot for model predictions — mc_obs_interval","title":"Interval plot for model predictions — mc_obs_interval","text":"Interval plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interval plot for model predictions — mc_obs_interval","text":"","code":"mc_obs_interval(..., scale_color = ggplot2::scale_color_brewer(palette = 1))  mc_model_interval(   ...,   scale_color = ggplot2::scale_color_brewer(palette = 7),   n_sample = NA,   draw = \"collapse\" )"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interval plot for model predictions — mc_obs_interval","text":"... Augments passed ggdist::stat_interval. scale_color scale_color_* layer interval. Default ggplot2::scale_color_brewer(). n_sample number sample draws show interval plot. Default NA. n_sample NA, mc_model_interval() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one interval plot; draw \"group\", draw shown individual interval plot; draw \"hops\", mc_model_interval() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Line geom — mc_obs_line","title":"Line geom — mc_obs_line","text":"Line geom","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line geom — mc_obs_line","text":"","code":"mc_obs_line(...)  mc_model_line(..., n_sample = NA, draw = \"group\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line geom — mc_obs_line","text":"... Augments passed ggplot2::geom_line. n_sample number sample draws show. Default NA. n_sample NA, mc_model_line() use draws posterior distribution. draw show draws? Default \"group\". draw \"collapse\", draws collapsed together connected one line; \"draw\" \"group\", data draw connected one line; draw \"hops\", mc_model_line() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_lineribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Line + multiple-ribbon plot for model predictions — mc_obs_lineribbon","title":"Line + multiple-ribbon plot for model predictions — mc_obs_lineribbon","text":"Line + multiple-ribbon plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_lineribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line + multiple-ribbon plot for model predictions — mc_obs_lineribbon","text":"","code":"mc_obs_lineribbon(..., scale_fill = ggplot2::scale_fill_brewer(palette = 1))  mc_model_lineribbon(   ...,   scale_fill = ggplot2::scale_fill_brewer(palette = 7),   n_sample = NA,   draw = \"collapse\" )"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_lineribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line + multiple-ribbon plot for model predictions — mc_obs_lineribbon","text":"... Augments passed ggdist::stat_lineribbon. scale_fill scale_fill_* layer lineribbon. Default ggplot2::scale_fill_brewer(). n_sample number sample draws show lineribbon plot. Default NA. n_sample NA, mc_model_lineribbon() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one lineribbon plot; draw \"group\", draw shown individual lineribbon plot; draw \"hops\", mc_model_lineribbon() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Points geom — mc_obs_point","title":"Points geom — mc_obs_point","text":"Points geom","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points geom — mc_obs_point","text":"","code":"mc_obs_point(...)  mc_model_point(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points geom — mc_obs_point","text":"... Augments passed ggplot2::geom_point. n_sample number sample draws show. Default NA. n_sample NA, mc_model_point() use draws posterior distribution. draw show draws? Default \"collapse\". \"collapse \"group point geom, since point geom just showing data points. draw \"collapse\" \"group\", draws collapsed together point represents one data point; draw \"hops\", mc_model_point() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_pointinterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Point + interval plot for model predictions — mc_obs_pointinterval","title":"Point + interval plot for model predictions — mc_obs_pointinterval","text":"Point + interval plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_pointinterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point + interval plot for model predictions — mc_obs_pointinterval","text":"","code":"mc_obs_pointinterval(...)  mc_model_pointinterval(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_pointinterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Point + interval plot for model predictions — mc_obs_pointinterval","text":"... Augments passed ggdist::stat_pointinterval. n_sample number sample draws show pointinterval plot. Default NA. n_sample NA, mc_model_pointinterval() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one pointinterval plot; draw \"group\", draw shown individual pointinterval plot; draw \"hops\", mc_model_pointinterval() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_ribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple-ribbon plot for model predictions — mc_obs_ribbon","title":"Multiple-ribbon plot for model predictions — mc_obs_ribbon","text":"Multiple-ribbon plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_ribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple-ribbon plot for model predictions — mc_obs_ribbon","text":"","code":"mc_obs_ribbon(..., scale_fill = ggplot2::scale_fill_brewer(palette = 1))  mc_model_ribbon(   ...,   scale_fill = ggplot2::scale_fill_brewer(palette = 7),   n_sample = NA,   draw = \"collapse\" )"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_ribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple-ribbon plot for model predictions — mc_obs_ribbon","text":"... Augments passed ggdist::stat_ribbon. scale_fill scale_fill_* layer ribbon Default ggplot2::scale_fill_brewer(). n_sample number sample draws show ribbon plot. Default NA. n_sample NA, mc_model_ribbon() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one ribbon plot; draw \"group\", draw shown individual ribbon plot; draw \"hops\", mc_model_ribbon() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_slab.html","id":null,"dir":"Reference","previous_headings":"","what":"Slab (ridge) plot for model predictions — mc_obs_slab","title":"Slab (ridge) plot for model predictions — mc_obs_slab","text":"Slab (ridge) plot model predictions","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_slab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slab (ridge) plot for model predictions — mc_obs_slab","text":"","code":"mc_obs_slab(...)  mc_model_slab(..., n_sample = NA, draw = \"collapse\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_slab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slab (ridge) plot for model predictions — mc_obs_slab","text":"... Augments passed ggdist::stat_slab. n_sample number sample draws show slab plot. Default NA. n_sample NA, mc_model_slab() use draws posterior distribution. draw show draws? Default \"collapse\". draw \"collapse\", draws collapsed together show one slab plot; draw \"group\", draw shown individual slab plot; draw \"hops\", mc_model_slab() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile geom — mc_obs_tile","title":"Tile geom — mc_obs_tile","text":"Tile geom","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile geom — mc_obs_tile","text":"","code":"mc_obs_tile(...)  mc_model_tile(..., n_sample = NA, draw = \"hops\")"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_model_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile geom — mc_obs_tile","text":"... Augments passed ggplot2::geom_tile. n_sample number sample draws show. Default NA. n_sample NA, mc_model_tile() use draws posterior distribution. draw show draws? Default \"hops\". draw \"collapse\", draws collapsed together shown one tile plot; \"draw\" \"group\", one draw shown tile plot; draw \"hops\", mc_model_tile() use animation show draw one frame; draw function, draws aggregated draw(). See examples details.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_set_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Order ticks on axis, rows, and columns — mc_set_order","title":"Order ticks on axis, rows, and columns — mc_set_order","text":"mc_set_order orders ticks axis grids rows columns. make ordered, variables axis, rows, columns must discrete.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_set_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order ticks on axis, rows, and columns — mc_set_order","text":"","code":"mc_set_order(x = NULL, y = NULL, row = NULL, col = NULL)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mc_set_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order ticks on axis, rows, and columns — mc_set_order","text":"x, y, row, col list order x ticks, y ticks, rows, columns.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mcplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new mcplot — mcplot","title":"Create a new mcplot — mcplot","text":"mcplot() initializes modelcheck object. follows ggplot syntax, uses plus sign (+) define features model check visualization.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mcplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new mcplot — mcplot","text":"","code":"mcplot(model)"},{"path":"https://guoziyang27.github.io/modelcheck/reference/mcplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new mcplot — mcplot","text":"model model fit object.","code":""},{"path":"https://guoziyang27.github.io/modelcheck/reference/mcplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new mcplot — mcplot","text":"mcplot() uses list defaults generate model check visualizations. One line mcplot(model) generate complete visualization posterior predictive checks. See vignette(\"modelcheck\") complete guidance.","code":""}]
