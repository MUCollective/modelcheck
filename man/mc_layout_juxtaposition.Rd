% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc_comparative_layout.R
\name{mc_layout_juxtaposition}
\alias{mc_layout_juxtaposition}
\alias{mc_layout_superposition}
\alias{mc_layout_nested}
\alias{mc_layout_encoding}
\title{Define comparative layout in model check visualization}
\usage{
mc_layout_juxtaposition(...)

mc_layout_superposition()

mc_layout_nested(justification = 0.2)

mc_layout_encoding(transform)
}
\arguments{
\item{...}{Other arguments passed on to \href{https://wilkelab.org/cowplot/articles/plot_grid.html}{\code{cowplot::plot_grid()}},
when using juxtaposition.}

\item{justification}{A number ro set the deviate from center when using nested juxtaposition.
If \code{justification} is a positive number, model predictions will be on the right
and data observations will be on the left; if \code{justification} is a negative
number, the positions are reversed.}

\item{transform}{What operation needs for explicit-encoding? If \code{transform} is:
\itemize{
\item \code{"residual"}, then \code{mcplot()} will show the comparison between data observations and
model predictions by a residual plot.
\item \code{"qq"}, then \code{mcplot()} will show the comparison by a Q-Q plot.
\item \code{"worm"}, then \code{mcplot()} will show the comparison by a detrended Q-Q plot (worm plot).
\item A function, then \code{mcplot()} will transform the data by that function.
The input of the function is a data frame generated from the \code{newdata} data frame
passed to \code{mc_distribution()}, which includes a .row column (a factor
grouping rows from the input newdata), .chain column (the chain each draw
came from, or NA if the model does not provide chain information),
.iteration column (the iteration the draw came from, or NA if the model
does not provide iteration information), and a .draw column (a unique
index corresponding to each draw from the distribution). The output of
the function should includes a column named \code{y_axis} that specifies the data
shown on y axis at least and an optional column named \code{x_axis} that specifies
the data shown on x axis. If the output includes \code{x_axis}, \code{mcplot()} will
ignore the conditional variable \code{x} defined in \code{mc_condition_on()}.
See examples for more details.
}}
}
\description{
Which comparative layout to use? If using \code{mc_layout_juxtaposition()}, \code{mcplot()}
will use juxtaposition layout to puts data observations and model predictions side by side in two seperated plots;
if using \code{mc_layout_superposition()}, \code{mcplot()} overlays data observations and model predictions in one plot;
if using \code{mc_layout_encoding}, \code{mcplot()} will show comparison by explicit-encoding;
if using \code{mc_layout_nested}, \code{mcplot()} will show comparison side by side in one plot.
}
\examples{
library(ggplot2)
library(dplyr)
mcplot(mpg_model) +
  mc_layout_juxtaposition()

mcplot(mpg_model) +
  mc_layout_superposition()

mcplot(mpg_model) +
  mc_layout_nested() +
  mc_condition_on(x = vars(vs))

mcplot(mpg_model) +
  mc_layout_encoding("qq")

# Defining a explicit encoding by a customized transform function to check
# stdandard residuals of model and data.

std_res_func = function(data) {
  data \%>\%
    mutate(y_axis = prediction - observation) \%>\%
    mutate(y_axis = y_axis / sd(y_axis))
}

mcplot(mpg_model) +
  mc_layout_encoding(std_res_func) +
  mc_condition_on(x = vars(disp)) +
  mc_gglayer(geom_hline(yintercept = 0))
}
